name: Terraform (Azure)

on:
  pull_request:
    paths:
      - "infra/terraform/**"
  push:
    branches:
      - main
    paths:
      - "infra/terraform/**"

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  TF_ROOT: infra/terraform
  TF_VERSION: "1.8.5"

jobs:
  tf:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_ROOT }}
    # Make secrets available to Terraform as input variables
    env:
      TF_VAR_dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
      TF_VAR_dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
      # Optional: hard-code images via TF vars
      # TF_VAR_fe_image: anasabdullahalzahrani/three-tier-frontend:latest
      # TF_VAR_be_image: anasabdullahalzahrani/three-tier-backend:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Init
        run: terraform init -input=false

      - name: Format check
        run: terraform fmt -check -recursive

      - name: Validate
        run: terraform validate -no-color

      # --- PR Plan: fast, no refresh, high parallelism ---
      - name: Plan (PR)
        if: github.event_name == 'pull_request'
        run: |
          terraform plan \
            -input=false \
            -refresh=false \
            -parallelism=20 \
            -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -no-color | tee plan.txt

      # Optional: comment the plan on the PR
      # - name: Comment plan on PR
      #   if: github.event_name == 'pull_request'
      #   uses: marocchino/sticky-pull-request-comment@v2
      #   with:
      #     recreate: true
      #     path: ${{ env.TF_ROOT }}/plan.txt

      # --- Push Plan: full plan (with refresh) and save to file ---
      - name: Plan (push)
        if: github.event_name == 'push'
        run: |
          terraform plan \
            -input=false \
            -parallelism=20 \
            -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -out=tfplan.bin

      - name: Apply (push)
        if: github.event_name == 'push'
        run: terraform apply -input=false -auto-approve tfplan.bin
