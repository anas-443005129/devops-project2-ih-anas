name: Terraform (Azure)

on:
  # Allow other workflows to call this one
  workflow_call:
    inputs:
      fe_image:
        description: 'Frontend image tag to deploy'
        required: false
        type: string
      be_image:
        description: 'Backend image tag to deploy'
        required: false
        type: string
    secrets:
      AZURE_CREDENTIALS:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      DOCKERHUB_USERNAME:
        required: false
      DOCKERHUB_TOKEN:
        required: false

  # Keep PR plans for review
  pull_request:
    paths: ['infra/terraform/**']

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  TF_ROOT: infra/terraform
  TF_VERSION: '1.8.5'

jobs:
  tf:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_ROOT }}

    # Root variables needed for validate/plan/apply
    env:
      # Prefer inputs from caller; fall back to "latest"
      TF_VAR_fe_image: ${{ inputs.fe_image || 'anasabdullahalzahrani/three-tier-frontend:latest' }}
      TF_VAR_be_image: ${{ inputs.be_image || 'anasabdullahalzahrani/three-tier-backend:latest' }}

      # Static environment values
      TF_VAR_rg_name:     rg-capstone-dev
      TF_VAR_rg_location: westeurope

      # Optional: expose DockerHub creds to TF if your modules read them
      TF_VAR_dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
      TF_VAR_dockerhub_token:    ${{ secrets.DOCKERHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Init
        run: terraform init -input=false

      - name: Fmt check
        run: |
          terraform fmt -check -recursive || {
            echo "::group::fmt-diff"
            terraform fmt -recursive -diff
            echo "::endgroup::"
            exit 1
          }

      - name: Validate
        run: terraform validate -no-color

      # -------- Plans --------
      - name: Plan (PR)
        if: github.event_name == 'pull_request'
        run: |
          terraform plan \
            -input=false \
            -refresh=false \
            -parallelism=20 \
            -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -no-color | tee plan.txt

      - name: Comment plan (PR)
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          path: ${{ env.TF_ROOT }}/plan.txt

      # When called by another workflow â†’ Plan+Apply
      - name: Plan (caller)
        if: github.event_name == 'workflow_call'
        run: |
          terraform plan \
            -input=false \
            -parallelism=20 \
            -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -out=tfplan.bin

      - name: Apply (caller)
        if: github.event_name == 'workflow_call'
        run: terraform apply -input=false -auto-approve tfplan.bin
