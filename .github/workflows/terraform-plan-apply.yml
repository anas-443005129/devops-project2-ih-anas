name: Terraform (Azure)

on:
  # Allow CD to call this
  workflow_call:
    inputs:
      fe_image: { description: 'Frontend image tag', required: false, type: string }
      be_image: { description: 'Backend image tag', required: false, type: string }
    secrets:
      AZURE_CREDENTIALS:     { required: true }
      AZURE_SUBSCRIPTION_ID: { required: true }
      DOCKERHUB_USERNAME:    { required: false }
      DOCKERHUB_TOKEN:       { required: false }

  # PRs: plan only
  pull_request:
    paths: ['infra/terraform/**']

env:
  TF_ROOT: infra/terraform
  TF_VERSION: '1.8.5'

jobs:
  tf:
    runs-on: ubuntu-latest
    name: tf
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    defaults:
      run:
        working-directory: ${{ env.TF_ROOT }}
    concurrency:
      group: terraform-${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    env:
      TF_VAR_fe_image: ${{ inputs.fe_image || 'anasabdullahalzahrani/three-tier-frontend:latest' }}
      TF_VAR_be_image: ${{ inputs.be_image || 'anasabdullahalzahrani/three-tier-backend:latest' }}
      TF_VAR_rg_name: rg-capstone-dev
      TF_VAR_rg_location: westeurope
      TF_VAR_dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
      TF_VAR_dockerhub_token:    ${{ secrets.DOCKERHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Init
        run: terraform init -input=false

      - name: Fmt check
        run: |
          terraform fmt -check -recursive || {
            echo "::group::fmt-diff"
            terraform fmt -recursive -diff
            echo "::endgroup::"
            exit 1
          }

      - name: Validate
        run: terraform validate -no-color

      # ---------- PR flow: Plan only + comment ----------
      - name: Plan (PR)
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          terraform plan \
            -input=false \
            -refresh=false \
            -parallelism=20 \
            -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -no-color | tee plan.txt

      - name: Comment plan (PR)
        if: ${{ github.event_name == 'pull_request' }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          path: ${{ env.TF_ROOT }}/plan.txt

      # ---------- Non-PR (called by CD or other) : Plan + Apply ----------
      - name: Plan (non-PR)
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          terraform plan \
            -input=false \
            -parallelism=20 \
            -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -out=tfplan.bin

      - name: Apply (non-PR)
        if: ${{ github.event_name != 'pull_request' }}
        run: terraform apply -input=false -auto-approve tfplan.bin
